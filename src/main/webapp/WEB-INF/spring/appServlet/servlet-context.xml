<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/websocket	
        http://www.springframework.org/schema/websocket/spring-websocket.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<!-- annotation-driven : 자바클래스 (소스)코드 내에 있는 어노테이션을 처리하게 하는 옵션 -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<!-- resources 경로 등록, 정적인 파일을 호출하게 되는 request url에 대해 default Servlet으로 위임 -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<!-- 클라이언트에게 응답할 화면을 찾아서 보내주는 클래스 -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- 알림창 socket EchoHandler -->
<!-- 	<beans:bean id="echoHandler" class="com.helloworks.spring.common.socket.EchoHandler" />
		<websocket:handlers>
		    <websocket:mapping handler="echoHandler" path="/echo-ws" />
			    <websocket:handshake-interceptors>
			        <beans:bean class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor" />
			    </websocket:handshake-interceptors>	
		    <websocket:sockjs websocket-enabled="true" />
		</websocket:handlers> -->
		
	<!-- 등록된 bean을 조회하는 범위 설정 -->
	<context:component-scan base-package="com.helloworks.spring" />
	<beans:bean id="commonExceptionHandler" class="com.helloworks.spring.common.CommonExceptionHandler" />
	
	<interceptors>
		
		<interceptor>
			<mapping path="/login.me" />
			<beans:bean id="loginIntercetor" class="com.helloworks.spring.common.interceptor.LoginInterceptor"></beans:bean>
		</interceptor>
		
	</interceptors>
	
	
</beans:beans>
